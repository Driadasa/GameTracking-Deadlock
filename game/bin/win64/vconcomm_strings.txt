 -enable_qaccessible
 -retail
%2.2d:%2.2d:%2.2d.%3.3d
( error_value != SOCKET_ERROR ) && ( error_value != WSAENOTCONN )
-enable_qaccessible
-nofocus
-vconbuffer
-vconmax
.?AV?$CBaseAppSystem@VIVConComm@@@@
.?AV?$CConCommandMemberAccessor@VCVConComm@@@@
.?AV?$CTier0AppSystem@VIVConComm@@$0A@@@
.?AV?$CTier1AppSystem@VIVConComm@@$0A@@@
.?AV?$CTier2AppSystem@VIVConComm@@$0A@@@
.?AVCServicePollThread@@
.?AVCVConActiveStateMessage@@
.?AVCVConChannelPokeMessage@@
.?AVCVConComm@@
.?AVCVConCommThread@@
.?AVCVConCommThread_PC@@
.?AVCVConPingMessage@@
.?AVCVConUserNameMessage@@
.?AVCVConsoleConVarListener@@
.?AVCVConsoleLoggingListener@@
.?AVCVConsoleModuleMappingListener@@
.?AVIConVarListener@@
.?AVIModuleMappingListener@@
.?AVIVConComm@@
<Unknown Shutdown Context>
<Unknown>
=============== End VConsole Buffered Messages ===============\n
=============== Prior Messages Discarded at %d bytes ===============\n
=============== VConsole Buffered Messages ===============\n
==============================================================\n
==========================================================\n
C:\buildworker\citadel_rel_win64\build\_build_\vconcomm\_vpc_vconcomm\default\win64\_msvc_\Retail\vconcomm.pdb
C:\buildworker\citadel_rel_win64\build\src\socketlib\socketlib.cpp
C:\buildworker\citadel_rel_win64\build\src\vconcomm\messages.cpp
C:\buildworker\citadel_rel_win64\build\src\vconcomm\sockettransport.cpp
C:\buildworker\citadel_rel_win64\build\src\vconcomm\vconcomm.cpp
CConCommandMemberAccessor<class CVConComm>::CommandCallback
CConCommandMemberAccessor<class CVConComm>::CommandCompletionCallback
CSocketConnection object must be cleaned up before it can be re-initialized. (endpoint %d is in state %d, handle is %llu)\n
CSocketConnection object must be cleaned up before it can be re-initialized. (in state %d)\n
CSocketConnection object was not properly cleaned up.
CSocketConnection::CanReadFromEndpoint
CSocketConnection::CanWriteToEndpoint
CSocketConnection::GetFirstAvailableListeningEndpoint
CSocketConnection::Init
CSocketConnection::Listen
CSocketConnection::ReadFromEndpoint
CSocketConnection::ResetEndpoint
CSocketConnection::TryAcceptIncomingConnection
CSocketConnection::WriteToEndpoint
CSocketConnection::~CSocketConnection
CSocketTransport::CSocketTransport
CSocketTransport::ReadMessages
CSocketTransport::WriteMessages
CTSQueue<struct VConCommMessage_t *,0>::Pop
CTSQueue<struct VConCommMessage_t *,0>::Purge
CTSQueue<struct VConCommMessage_t *,0>::Push
CTSQueue<struct VConCommMessage_t *,0>::~CTSQueue
CUtlMemory<class CVConCommThread_PC *,int>::Grow
CUtlMemory<class CVConCommThread_PC *,int>::Grow::<lambda_2>::operator ()
CUtlMemory<struct EndpointState_t,int>::Grow
CUtlMemory<struct EndpointState_t,int>::Grow::<lambda_1>::operator ()
CUtlMemory<struct EndpointState_t,int>::Grow::<lambda_2>::operator ()
CUtlMemory<struct LoggingChannel_t const *,int>::Grow
CUtlMemory<struct LoggingChannel_t const *,int>::Grow::<lambda_2>::operator ()
CUtlMemory<struct UtlRBTreeNode_t<struct CUtlOrderedMapBase<unsigned int,class CUtlString,class CDefLess<unsigned int>,int>::Node_t,int>,int>::Grow
CUtlMemory<struct UtlRBTreeNode_t<struct CUtlOrderedMapBase<unsigned int,class CUtlString,class CDefLess<unsigned int>,int>::Node_t,int>,int>::Grow::<lambda_2>::operator ()
CUtlMemory<struct UtlRBTreeNode_t<struct CUtlOrderedMapBase<unsigned int,struct MessageDataInfo_t *,class CDefLess<unsigned int>,int>::Node_t,int>,int>::Grow
CUtlMemory<struct UtlRBTreeNode_t<struct CUtlOrderedMapBase<unsigned int,struct MessageDataInfo_t *,class CDefLess<unsigned int>,int>::Node_t,int>,int>::Grow::<lambda_2>::operator ()
CUtlMemory<struct VConCommMessage_t *,int>::Grow
CUtlMemory<struct VConCommMessage_t *,int>::Grow::<lambda_2>::operator ()
CUtlQueue<struct VConCommMessage_t *,class CUtlMemory<struct VConCommMessage_t *,int> >::Count
CUtlQueue<struct VConCommMessage_t *,class CUtlMemory<struct VConCommMessage_t *,int> >::Element
CUtlQueue<struct VConCommMessage_t *,class CUtlMemory<struct VConCommMessage_t *,int> >::Next
CUtlRBTree<struct CUtlOrderedMapBase<unsigned int,class CUtlString,class CDefLess<unsigned int>,int>::Node_t,class CUtlOrderedMapBase<unsigned int,class CUtlString,class CDefLess<unsigned int>,int>::CKeyLess,int,class CUtlMemory<struct UtlRBTreeNode_t<struct CUtlOrderedMapBase<unsigned int,class CUtlString,class CDefLess<unsigned int>,int>::Node_t,int>,int> >::Insert
CUtlRBTree<struct CUtlOrderedMapBase<unsigned int,class CUtlString,class CDefLess<unsigned int>,int>::Node_t,class CUtlOrderedMapBase<unsigned int,class CUtlString,class CDefLess<unsigned int>,int>::CKeyLess,int,class CUtlMemory<struct UtlRBTreeNode_t<struct CUtlOrderedMapBase<unsigned int,class CUtlString,class CDefLess<unsigned int>,int>::Node_t,int>,int> >::NewNode
CUtlRBTree<struct CUtlOrderedMapBase<unsigned int,class CUtlString,class CDefLess<unsigned int>,int>::Node_t,class CUtlOrderedMapBase<unsigned int,class CUtlString,class CDefLess<unsigned int>,int>::CKeyLess,int,class CUtlMemory<struct UtlRBTreeNode_t<struct CUtlOrderedMapBase<unsigned int,class CUtlString,class CDefLess<unsigned int>,int>::Node_t,int>,int> >::RemoveAll
CUtlRBTree<struct CUtlOrderedMapBase<unsigned int,struct MessageDataInfo_t *,class CDefLess<unsigned int>,int>::Node_t,class CUtlOrderedMapBase<unsigned int,struct MessageDataInfo_t *,class CDefLess<unsigned int>,int>::CKeyLess,int,class CUtlMemory<struct UtlRBTreeNode_t<struct CUtlOrderedMapBase<unsigned int,struct MessageDataInfo_t *,class CDefLess<unsigned int>,int>::Node_t,int>,int> >::FreeNode
CUtlRBTree<struct CUtlOrderedMapBase<unsigned int,struct MessageDataInfo_t *,class CDefLess<unsigned int>,int>::Node_t,class CUtlOrderedMapBase<unsigned int,struct MessageDataInfo_t *,class CDefLess<unsigned int>,int>::CKeyLess,int,class CUtlMemory<struct UtlRBTreeNode_t<struct CUtlOrderedMapBase<unsigned int,struct MessageDataInfo_t *,class CDefLess<unsigned int>,int>::Node_t,int>,int> >::Insert
CUtlRBTree<struct CUtlOrderedMapBase<unsigned int,struct MessageDataInfo_t *,class CDefLess<unsigned int>,int>::Node_t,class CUtlOrderedMapBase<unsigned int,struct MessageDataInfo_t *,class CDefLess<unsigned int>,int>::CKeyLess,int,class CUtlMemory<struct UtlRBTreeNode_t<struct CUtlOrderedMapBase<unsigned int,struct MessageDataInfo_t *,class CDefLess<unsigned int>,int>::Node_t,int>,int> >::NewNode
CUtlRBTree<struct CUtlOrderedMapBase<unsigned int,struct MessageDataInfo_t *,class CDefLess<unsigned int>,int>::Node_t,class CUtlOrderedMapBase<unsigned int,struct MessageDataInfo_t *,class CDefLess<unsigned int>,int>::CKeyLess,int,class CUtlMemory<struct UtlRBTreeNode_t<struct CUtlOrderedMapBase<unsigned int,struct MessageDataInfo_t *,class CDefLess<unsigned int>,int>::Node_t,int>,int> >::RemoveAll
CUtlRBTree<struct CUtlOrderedMapBase<unsigned int,struct MessageDataInfo_t *,class CDefLess<unsigned int>,int>::Node_t,class CUtlOrderedMapBase<unsigned int,struct MessageDataInfo_t *,class CDefLess<unsigned int>,int>::CKeyLess,int,class CUtlMemory<struct UtlRBTreeNode_t<struct CUtlOrderedMapBase<unsigned int,struct MessageDataInfo_t *,class CDefLess<unsigned int>,int>::Node_t,int>,int> >::RemoveAt
CVConComm::GetUniqueIDForChannel
CVConComm::Init
CVConsoleLoggingListener::Log
Can only accept connections on server if socket is in listening state.
Can only be called on server.
Can only listen for connections on server in blank state.
Can only poll read status while listening for connections (server-only) or connected.
Can only poll write status while connecting (client-only) or connected.
Can only read from connected socket. (endpoint %d, state %d)
Can only write to connected socket. (endpoint %d, state %d)
Cannot recover from failed socket shutdown. (error %d)
Cannot recover from failure in closesocket()
Clear buffered logging
Clearing %d buffered messages of %d bytes\n
Clients %d of %d:\n
CloseSocket
Connection in progress...\n
Connection will timeout in %d seconds...\n
EnumWindows
GetClassNameA
GetExtendedTcpTable
GetWindowInfo
GetWindowTextA
Invalid connection type.
Invalid endpoint index.
Invalid number of allowed connections (%d).
IsValid( it )
IsWindowVisible
K32GetModuleFileNameExA
List connections
LogProcessesWithOpenLocalPort(%d) - Failed to find GetExtendedTcpTable\n
LogProcessesWithOpenLocalPort(%d) - Failed to load iphlpapi.dll\n
LogProcessesWithOpenLocalPort(%d) - Unexpected initial retcode %d\n
LogProcessesWithOpenLocalPort(%d) - Unexpected second retcode %d\n
Make VConsole Foreground(): RemoteWindow:0x%p\n
Make VConsole Foreground(): ReturnToWindow:0x%p, Timeout:%d, UseHostPath:%d\n
Message Version Mismatch: '%s', Expected %d, Got %d\n
No VConsole, Ignoring.\n
Only TCP sockets are implemented at the moment.
PID %d @ %s\n
QWidget
QWindowIcon
RSDS
Rejecting registering message '%s'. Already registered to an alternate handler.\n
Send can only return zero if zero bytes were given.
SetHandleInformation
SocketLibInit
SocketLibShutdown
Sockets not initialized
TCP Local Port %d, Remote Port %d (State %d)\n
Unknown protocol.
Unrecognized return value from Winsock recv.
Unrecognized return value from Winsock send.
VConComm
VConComm Discarding Oversized Outgoing Message: '%s' (%d bytes)\n
VConComm failed to get expected listening endpoint on port %d!\n
VConComm failed to initialize server side TCP socket!\n
VConComm failed to initialize socket services!\n
VConComm failed to listen on port %d with %d connections!\nExisting Process:\n%s\n
VConCommMessage_t::BuildModuleMappingMessage
VConCommThread_PC
VConsole Rejecting Message: '%s', No Message Handler Claimed Ownership.\n
VConsole client connection from %d.%d.%d.%d\n
VConsole2
Waiting For VConsole To Connect...\n
Xbox VDP is not supported on this platform.
\t%s@%d.%d.%d.%d, connected: %s\n
\t_V_StringAfterPrefixCaseSensitive
arg%d
arg0
commandline
error == 0
iphlpapi.dll
m_ConnectionType == CT_INDETERMINATE && m_SocketProtocol == SP_INDETERMINATE
m_ConnectionType == CT_SERVER
m_Endpoints.IsValidIndex( nEndpointIndex )
m_Endpoints.IsValidIndex( nEndpointIndex ) && ( m_Endpoints[nEndpointIndex].m_SocketState == SSTATE_CONNECTION_IN_PROGRESS || m_Endpoints[nEndpointIndex].m_SocketState == SSTATE_CONNECTED)
m_Endpoints.IsValidIndex( nEndpointIndex ) && ( m_Endpoints[nEndpointIndex].m_SocketState == SSTATE_LISTENING || m_Endpoints[nEndpointIndex].m_SocketState == SSTATE_CONNECTED )
m_Endpoints.IsValidIndex( nEndpointIndex ) && m_Endpoints[nEndpointIndex].m_SocketState == SSTATE_CONNECTED
m_Endpoints[i].m_SocketState == SSTATE_UNINITIALIZED && m_Endpoints[i].m_SocketHandle == SOCKET_HANDLE_INVALID
m_ListeningSocketState == SSTATE_LISTENING && m_ConnectionType == CT_SERVER
m_ListeningSocketState == SSTATE_UNINITIALIZED && m_ConnectionType == CT_SERVER
m_ListeningSocketState == SSTATE_UNINITIALIZED && m_SocketProtocol == SP_INDETERMINATE && m_ConnectionType == CT_INDETERMINATE
m_pCurrentOutgoingMessage->m_nMessageLength > 0
nBufferSize == 0
nMaxBytesToReceive > 0
nMessageSize > 0
nNumAllowedConnections > 0 && ( m_bDisableServerConnectionLimit || nNumAllowedConnections <= MAX_SERVER_CONNECTIONS )
pModuleInfo->m_nCurrentSize <= UINT32_MAX
pSocketConnection
pTarget == ( pData + nDataLength )
recv_return_value > 0
s_SocketLibInitialized == true
send_return_value > 0
socketProtocol == SP_TCP
vc_exit %s
vcon_clear_buffered_log
vcon_clients
vconcomm.dll
vconsole2.exe
win64
